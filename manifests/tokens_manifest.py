from pprint import pprint


class Tokens:
    tokens = [
        'Zrx',
        'Binance-Coin',
        'Avalanche',
        'Algorand',
        'Bitcoin',
        'Binary-USD',
        'Bitcoin-Cash',
        'BAT',
        'Cardano',
        'Ethereum',
        'Litecoin',
        'Binance-USD',
        'DAI',
        'Dogecoin',
        'Chainlink',
        'Cosmos',
        'Polkadot',
        'Ripple',
        'Shiba-Inu',
        'Tether-BEP20',
        'Tether-ERC20',
        'Tether-TRC20',
        'Tron',
        'USD Coin-ERC20',
        'MATIC',
        'Monero',
        'NE',
        'Solana',
        'Stellar',
        'Tezos',
        'Zcash',
        'VeChain',
        'Uniswap',
        'USD-Coin',
        'USD-Coin-BEP20',
        'USD-Coin-TRC20',
        'Ravencoin',
        'ICON',
        'Komodo',
        'Maker',
        'MIOTA',
        'NEM',
        'OmiseGO',
        'Ontology',
        'Qtum']
    
    tokens_valid = ['zrx',
                    'binance-coin',
                    'avalanche',
                    'algorand',
                    'bitcoin',
                    'binary-usd',
                    'bitcoin-cash',
                    'bat',
                    'cardano',
                    'ethereum',
                    'litecoin',
                    'binance-usd',
                    'dai',
                    'dogecoin',
                    'chainlink',
                    'cosmos',
                    'polkadot',
                    'ripple',
                    'shiba-inu',
                    'tether-bep20',
                    'tether-erc20',
                    'tether-trc20',
                    'tron',
                    'usd-coin-erc20',
                    'matic',
                    'monero',
                    'ne',
                    'solana',
                    'stellar',
                    'tezos'
                    'zcash',
                    'vechain',
                    'uniswap',
                    'usd-coin',
                    'usd-coin-bep20',
                    'usd-coin-trc20',
                    'ravencoin',
                    'icon',
                    'komodo',
                    'maker',
                    'miota'
                    'nem',
                    'omisego',
                    'ontology',
                    'qtum']
    
    tokens_ABB = ['ZRX',
                  'BNB',
                  'AVAX',
                  'ALGO',
                  'BTC',
                  'BNRUSD',
                  'BCH',
                  'BAT',
                  'ADA',
                  'ETH',
                  'LTC',
                  'BUSD',
                  'ERC20',
                  'DOGE',
                  'LINK',
                  'ATOM',
                  'DOT',
                  'XRP',
                  'SHIBERC20',
                  'USDT',
                  'USDTERC20',
                  'USDTTRC20',
                  'TRX',
                  'USDC',
                  'Polygon',
                  'XMR']
    
    tokens_ABR_lower = ['zrx',
                        'bnb',
                        'avax',
                        'algo',
                        'btc',
                        'bnrusd',
                        'bch',
                        'bat',
                        'ada',
                        'eth',
                        'ltc',
                        'busd',
                        'erc20',
                        'doge',
                        'link',
                        'atom',
                        'dot',
                        'xrp',
                        'shib-erc20',
                        'usdt',
                        'trx',
                        'usdc',
                        'polygon',
                        'xmr']
    
    tokens_init_alfabit = [
        '0x(ZRX)',
        'Binance%Coin(BNB)',
        'Avalanche(AVAX)',
        'Algorand(ALGO)',
        'Bitcoin(BTC)',
        'Binary%USD(BNRUSD)',
        'BitcoinCash(BCH)',
        'BAT(BAT)',
        'Cardano(ADA)',
        'Ethereum(ETH)',
        'Litecoin(LTC)',
        'Binance%20USD(BUSD)',
        'Dai(DAI)',
        'Dogecoin(DOGE)',
        'Chainlink(LINK)',
        'Cosmos%20(ATOM)',
        'Polkadot(DOT)',
        'Ripple(XRP)',
        'ShibaInu(SHIB ERC20)',
        'Tether(USDT)%20BEP20',
        'Tether(USDT)%20ERC20',
        'Tether(USDT)%20TRC20',
        'Tron(TRX)',
        'USD Coin ERC20(USDC)',
        'Polygon(MATIC)',
        'Monero(XMR)',
        'NEO',
        'Solana%20(SOL)',
        'Stellar(XLM)',
        'Tezos(XTZ)',
        'Zcash(ZEC)',
        'VeChain(VET)',
        'Uniswap(UNI)',
        'USD%20Coin(USDC)',
        'USD%20Coin(USDC)%20BEP20',
        'USD%20Coin(USDC)%20TRC20',
        'Ravencoin(RVN)',
        'ICON(ICX)',
        'Komodo(KMD)',
        'Maker(MKR)',
        'MIOTA(IOTA)',
        'NEM(XEM)',
        'OmiseGO(OMG)',
        'Ontology(ONT)',
        'QTUM',
        'WAVES']
    
    token_chains = {'algorand': 'ALGO',
                    'avalanche': 'AVAX',
                    'bat': 'BAT',
                    'binance-coin': 'BNB',
                    'binance-usd': 'BUSD',
                    'binary-usd': 'BNRUSD',
                    'bitcoin': 'BTC',
                    'bitcoin-cash': 'BCH',
                    'cardano': 'ADA',
                    'chainlink': 'LINK',
                    'cosmos': 'ATOM',
                    'dai': 'ERC20',
                    'dogecoin': 'DOGE',
                    'ethereum': 'ETH',
                    'litecoin': 'LTC',
                    'matic': 'Polygon',
                    'monero': 'XMR',
                    'polkadot': 'DOT',
                    'ripple': 'XRP',
                    'shiba-inu': 'SHIBERC20',
                    'tether-bep20': 'USDT',
                    'tether-erc20': 'USDTERC20',
                    'tether-trc20': 'USDTTRC20',
                    'tron': 'TRX',
                    'usd-coin-erc20': 'USDC',
                    'zrx': 'ZRX',
                    '0x(ZRX)': 'ZRX',
                    'Algorand(ALGO)': 'ALGO',
                    'Avalanche(AVAX)': 'AVAX',
                    'BAT(BAT)': 'BAT',
                    'Binance%20USD(BUSD)': 'BUSD',
                    'Binance%Coin(BNB)': 'BNB',
                    'Binary%USD(BNRUSD)': 'BNRUSD',
                    'Bitcoin(BTC)': 'BTC',
                    'BitcoinCash(BCH)': 'BCH',
                    'Cardano(ADA)': 'ADA',
                    'Chainlink(LINK)': 'LINK',
                    'Cosmos%20(ATOM)': 'ATOM',
                    'Dai(DAI)': 'ERC20',
                    'Dogecoin(DOGE)': 'DOGE',
                    'Ethereum(ETH)': 'ETH',
                    'Litecoin(LTC)': 'LTC',
                    'Monero(XMR)': 'XMR',
                    'Polkadot(DOT)': 'DOT',
                    'Polygon(MATIC)': 'Polygon',
                    'Ripple(XRP)': 'XRP',
                    'ShibaInu(SHIB ERC20)': 'SHIBERC20',
                    'Tether(USDT)%20BEP20': 'USDT',
                    'Tether(USDT)%20ERC20': 'USDTERC20',
                    'Tether(USDT)%20TRC20': 'USDTTRC20',
                    'Tron(TRX)': 'TRX',
                    'USD Coin ERC20(USDC)': 'USDC',
                    'Algorand': 'ALGO',
                    'Avalanche': 'AVAX',
                    'BAT': 'BAT',
                    'Binance-Coin': 'BNB',
                    'Binance-USD': 'BUSD',
                    'Binary-USD': 'BNRUSD',
                    'Bitcoin': 'BTC',
                    'Bitcoin-Cash': 'BCH',
                    'Cardano': 'ADA',
                    'Chainlink': 'LINK',
                    'Cosmos': 'ATOM',
                    'DAI': 'ERC20',
                    'Dogecoin': 'DOGE',
                    'Ethereum': 'ETH',
                    'Litecoin': 'LTC',
                    'MATIC': 'Polygon',
                    'Monero': 'XMR',
                    'Polkadot': 'DOT',
                    'Ripple': 'XRP',
                    'Shiba-Inu': 'SHIBERC20',
                    'Tether-BEP20': 'USDT',
                    'Tether-ERC20': 'USDTERC20',
                    'Tether-TRC20': 'USDTTRC20',
                    'Tron': 'TRX',
                    'USD Coin-ERC20': 'USDC',
                    'Zrx': 'ZRX'}
    
    token_fiat = ['KSPBKZT',
                  'PSBRUB',
                  'CPTSRUB',
                  'CARDRUB',
                  'PRRUB',
                  'ACRUB',
                  'ADVCUSD',
                  'SBERRUB',
                  'RFBRUB',
                  'TCSBRUB',
                  'TBRUB',
                  'FRTBKZT',
                  'RNKBRUB',
                  'YAMRUB',
                  'QWRUB',
                  'RUSSTRUB',
                  'UZCUZS',
                  'CARDKZT',
                  'HLKBKZT']
    # add standard bank replace if you need
    bank_abbreviations = {
        'kaspi bank kazakhstani tenge': 'KSPBKZT',
        'kaspi bank': 'KSPB',
        'сбербанк': 'SB',
        'perfect money': 'PM',
        'advcash': 'ADV',
        'webmoney': 'WM',
        'moneygo': 'MG',
        'visa/masterCard': 'VMC',
        'qiwi': 'QW',
        'payeer': 'PR',
        'юmoney (Я.Деньги)': 'YM',
        'forteBank': 'FB',
        'halykbank': 'HB',
        'тинькофф': 'TF',
        'банк центр кредит': 'BCK',
        'master/visa': 'VMC',
        'альфабанк': 'Alfa',
        'ситибанк': 'STY'
    }


tokens_dict = {
    'KSPBKZT': 'Kaspi Bank Kazakhstani Tenge',
    'PSBRUB': 'Promsvyazbank Russian Ruble',
    'CPTSRUB': 'Capitalist Russian Ruble',
    'CARDRUB': 'Card Russian Ruble',
    'PRRUB': 'Payeer Russian Ruble',
    'ACRUB': 'Advanced Cash Russian Ruble',
    'ADVCUSD': 'Advcash USD',
    'SBERRUB': 'Sberbank Russian Ruble',
    'RFBRUB': 'Raiffeisenbank Russian Ruble',
    'TCSBRUB': 'Tinkoff Credit Systems Bank Russian Ruble',
    'TBRUB': 'Tinkoff Bank Russian Ruble',
    'FRTBKZT': 'ForteBank Kazakhstani Tenge',
    'RNKBRUB': 'RNCB Russian Ruble',
    'YAMRUB': 'Yandex Money Russian Ruble',
    'QWRUB': 'Qiwi Wallet Russian Ruble',
    'RUSSTRUB': 'Russia Standard Bank Russian Ruble',
    'UZCUZS': 'Uzcard Uzbekistani Som',
    'CARDKZT': 'Card Kazakhstani Tenge',
    'HLKBKZT': 'Halyk Bank Kazakhstani Tenge'
}
